# name: test/sql/vectorized/vectorized_decrypt_strings.test
# description: Test vectorized encrypt scalar function with random strings
# group: [simple-encryption/vectorized]

require simple_encryption

# Ensure any currently stored secrets don't interfere with the test
statement ok
set allow_persistent_secrets=false;

# Create an internal secret (for internal encryption of columns)
statement ok
CREATE SECRET key_2 (
    TYPE VCRYPT,
    TOKEN 'ABCDEFGHIJKLMNOP',
    LENGTH 16
);

# Create a table with random string values
statement ok
CREATE TABLE test_strings AS
    SELECT
        SUBSTRING(MD5(RANDOM()::TEXT), 1, 5) AS value
    FROM
        range(12800);

statement ok
ALTER TABLE test_strings ADD COLUMN encrypted_values STRUCT(nonce_hi UBIGINT, nonce_lo UBIGINT, counter UINTEGER, cipher USMALLINT, value BLOB, type TINYINT);

statement ok
ALTER TABLE test_strings ADD COLUMN decrypted_values VARCHAR;

statement ok
UPDATE test_strings SET encrypted_values = encrypt(value, 'key_2');

statement ok
CREATE TABLE shuffle AS SELECT * FROM test_strings ORDER BY hash(rowid);

statement ok
UPDATE shuffle SET decrypted_values = decrypt(encrypted_values, 'key_2');

query I sort r1
select value from test_strings ORDER BY hash(rowid) limit 10;
----

query I sort r1
select decrypted_values from shuffle limit 10;
----